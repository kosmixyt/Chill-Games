// Types pour les jeux
export interface Game {
  id: number;
  name: string;
  description: string;
  players: string;
  duration: string;
  difficulty: "Facile" | "Moyen" | "Difficile";
  category: "Ambiance" | "StratÃ©gie" | "Party" | "CoopÃ©ratif" | "Bluff";
  emoji: string;
  rules?: string;
  materials?: string[];
  tips?: string[];
  href: string;
}

// Base de donnÃ©es des jeux
export const games: Game[] = [
  {
    id: 1,
    name: "Action ou VÃ©ritÃ©",
    description:
      "Un classique indÃ©modable oÃ¹ les joueurs doivent choisir entre rÃ©pondre Ã  une question ou relever un dÃ©fi.",
    players: "2+",
    duration: "10-60 min",
    difficulty: "Facile",
    category: "Ambiance",
    emoji: "ðŸŽ²",
    rules:
      "Les joueurs s'assoient en cercle. Ã€ tour de rÃ´le, un joueur demande Ã  un autre : 'Action ou VÃ©ritÃ© ?'. Si le joueur choisit 'VÃ©ritÃ©', il doit rÃ©pondre honnÃªtement Ã  une question. S'il choisit 'Action', il doit relever un dÃ©fi proposÃ©. Si le joueur refuse, il reÃ§oit un gage.",
    materials: ["Liste de questions", "Liste de dÃ©fis (optionnel)"],
    tips: [
      "Adaptez les questions et dÃ©fis Ã  l'Ã¢ge des joueurs",
      "Respectez les limites de chacun",
      "Favorisez la bonne humeur et l'inclusion",
    ],
    href: "/play/action-ou-verite",
  },
];

// Fonctions utilitaires pour les jeux
export const getGameById = (id: number): Game | undefined => {
  return games.find((game) => game.id === id);
};

export const getGamesByCategory = (category: string): Game[] => {
  if (category === "Tous") return games;
  return games.filter((game) => game.category === category);
};

export const getRandomGame = (filteredGames: Game[] = games): Game | null => {
  if (filteredGames.length === 0) return null;
  const randomIndex = Math.floor(Math.random() * filteredGames.length);
  return filteredGames[randomIndex] || null;
};

export const getAllCategories = (): string[] => {
  const categories = Array.from(new Set(games.map((game) => game.category)));
  return ["Tous", ...categories];
};
